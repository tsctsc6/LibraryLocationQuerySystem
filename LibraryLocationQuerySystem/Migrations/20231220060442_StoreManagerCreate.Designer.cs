// <auto-generated />
using System;
using LibraryLocationQuerySystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryLocationQuerySystem.Migrations
{
    [DbContext(typeof(StoreManagerDbContext))]
    [Migration("20231220060442_StoreManagerCreate")]
    partial class StoreManagerCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryLocationQuerySystem.Models.Book", b =>
                {
                    b.Property<string>("SortCallNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)");

                    b.Property<string>("FormCallNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublicDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublishingHouse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("SortCallNumber", "FormCallNumber");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("LibraryLocationQuerySystem.Models.Location", b =>
                {
                    b.Property<byte>("LocationLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LocationId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LocationParent")
                        .HasColumnType("tinyint");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("LocationLevel", "LocationId", "LocationParent");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("LibraryLocationQuerySystem.Models.Store", b =>
                {
                    b.Property<string>("BookSortCallNumber")
                        .HasColumnType("nchar(15)");

                    b.Property<string>("BookFormCallNumber")
                        .HasColumnType("nchar(15)");

                    b.Property<byte>("LocationLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LocationId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LocationParent")
                        .HasColumnType("tinyint");

                    b.Property<byte>("RemainNum")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StoreDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StoreNum")
                        .HasColumnType("tinyint");

                    b.HasKey("BookSortCallNumber", "BookFormCallNumber", "LocationLevel", "LocationId", "LocationParent");

                    b.HasIndex("LocationLevel", "LocationId", "LocationParent");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("LibraryLocationQuerySystem.Models.Store", b =>
                {
                    b.HasOne("LibraryLocationQuerySystem.Models.Book", "Book")
                        .WithMany("Stores")
                        .HasForeignKey("BookSortCallNumber", "BookFormCallNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryLocationQuerySystem.Models.Location", "Location")
                        .WithMany("Stores")
                        .HasForeignKey("LocationLevel", "LocationId", "LocationParent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("LibraryLocationQuerySystem.Models.Book", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("LibraryLocationQuerySystem.Models.Location", b =>
                {
                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
